{
  "swagger" : "2.0",
  "info" : {
    "description" : "REST Library API Endpoints",
    "version" : "version 1.0",
    "title" : "REST API Documentation for WPLEX Garagem",
    "termsOfService" : "http://www.wplex.com.br/terms",
    "contact" : {
      "name" : "Ryan Padilha",
      "url" : "https://github.com/ryanpadilha",
      "email" : "ryan.padilha@wplex.com.br"
    },
    "license" : {
      "name" : "WPLEX License Terms",
      "url" : "http://www.wplex.com.br/license"
    }
  },
  "host" : "wplex-app.herokuapp.com",
  "tags" : [ {
    "name" : "company"
  }, {
    "name" : "garage"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/api/v1/companies" : {
      "get" : {
        "tags" : [ "company" ],
        "summary" : "Retrieves a list of companies",
        "description" : "",
        "operationId" : "list",
        "responses" : {
          "200" : {
            "description" : "Retrieves a list of companies",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Company"
              }
            }
          },
          "204" : {
            "description" : "No content retrieve, empty list",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Company"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "company" ],
        "summary" : "Create a company resource",
        "description" : "",
        "operationId" : "create",
        "parameters" : [ {
          "in" : "body",
          "name" : "company",
          "description" : "Company json stream resource",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Company"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Create a new company resource",
            "schema" : {
              "$ref" : "#/definitions/Company"
            }
          },
          "304" : {
            "description" : "Return a resource not modified",
            "schema" : {
              "$ref" : "#/definitions/Company"
            }
          },
          "400" : {
            "description" : "Client Bad Request"
          }
        }
      }
    },
    "/api/v1/companies/{id}" : {
      "get" : {
        "tags" : [ "company" ],
        "summary" : "Get a company by id",
        "description" : "",
        "operationId" : "get",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Company Id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Retrieve a company searched by id",
            "schema" : {
              "$ref" : "#/definitions/Company"
            }
          },
          "204" : {
            "description" : "No content retrieve searched by id",
            "schema" : {
              "$ref" : "#/definitions/Company"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "company" ],
        "summary" : "Update a company resource",
        "description" : "",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Company Id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Company json stream resource",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Company"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Retrieve an update company resource",
            "schema" : {
              "$ref" : "#/definitions/Company"
            }
          },
          "400" : {
            "description" : "Client Bad Request"
          },
          "404" : {
            "description" : "Not found retrieve if no update was process",
            "schema" : {
              "$ref" : "#/definitions/Company"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "company" ],
        "summary" : "Delete a company resource",
        "description" : "",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Company Id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "204" : {
            "description" : "No content retrive, deleted company resource",
            "schema" : {
              "$ref" : "#/definitions/Company"
            }
          },
          "404" : {
            "description" : "Not found retrieve if no delete was process",
            "schema" : {
              "$ref" : "#/definitions/Company"
            }
          }
        }
      }
    },
    "/api/v1/garages" : {
      "get" : {
        "tags" : [ "garage" ],
        "summary" : "Retrieves a list of garages",
        "description" : "",
        "operationId" : "list",
        "responses" : {
          "200" : {
            "description" : "Retrieves a list of garages",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Garage"
              }
            }
          },
          "204" : {
            "description" : "No content retrieve",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Garage"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "garage" ],
        "summary" : "Create a garage resource",
        "description" : "",
        "operationId" : "create",
        "parameters" : [ {
          "in" : "body",
          "name" : "garage",
          "description" : "Garage json stream resource",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Garage"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Create a new garage resource",
            "schema" : {
              "$ref" : "#/definitions/Garage"
            }
          },
          "304" : {
            "description" : "Return a resource not modified",
            "schema" : {
              "$ref" : "#/definitions/Garage"
            }
          },
          "400" : {
            "description" : "Client Bad Request"
          }
        }
      }
    },
    "/api/v1/garages/search/company/{id}" : {
      "get" : {
        "tags" : [ "garage" ],
        "summary" : "Search garages by company id",
        "description" : "",
        "operationId" : "findByCompanyId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Company Id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Retrieves a list of garages",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Garage"
              }
            }
          },
          "204" : {
            "description" : "No content found by id"
          }
        }
      }
    },
    "/api/v1/garages/search/page" : {
      "get" : {
        "tags" : [ "garage" ],
        "summary" : "Search garages and paginating",
        "description" : "",
        "operationId" : "getPage",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Number of the page. Default is 0.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit of the page. Default is 10.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "Field name of order. Default is name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "Sorting flag of field. Default is ASC [DESC].",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Retrieves a list of garages paginated",
            "schema" : {
              "$ref" : "#/definitions/PageGarage"
            }
          },
          "204" : {
            "description" : "No content found"
          }
        }
      }
    },
    "/api/v1/garages/{id}" : {
      "get" : {
        "tags" : [ "garage" ],
        "summary" : "Get a garage by id",
        "description" : "",
        "operationId" : "get",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Garage Id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Retrieve a garage searched by id",
            "schema" : {
              "$ref" : "#/definitions/Garage"
            }
          },
          "204" : {
            "description" : "No content retrieve searched by id",
            "schema" : {
              "$ref" : "#/definitions/Garage"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "garage" ],
        "summary" : "Update a garage resource",
        "description" : "",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Garage Id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Garage json stream resource",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Garage"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Retrieve an updage garage resource",
            "schema" : {
              "$ref" : "#/definitions/Garage"
            }
          },
          "400" : {
            "description" : "Client Bad Request"
          },
          "404" : {
            "description" : "Not found retrieve if no update was process",
            "schema" : {
              "$ref" : "#/definitions/Garage"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "garage" ],
        "summary" : "Delete a garage resource",
        "description" : "",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Garage Id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "204" : {
            "description" : "No content retrieve, deleted garage resource",
            "schema" : {
              "$ref" : "#/definitions/Garage"
            }
          },
          "404" : {
            "description" : "Not found retrieve if no delete was process"
          }
        }
      }
    }
  },
  "definitions" : {
    "Company" : {
      "type" : "object",
      "required" : [ "created" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 100
        },
        "initials" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 5
        }
      }
    },
    "Garage" : {
      "type" : "object",
      "required" : [ "created" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 100
        },
        "initials" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 5
        },
        "company" : {
          "$ref" : "#/definitions/Company"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "PageGarage" : {
      "type" : "object",
      "properties" : {
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "sort" : {
          "$ref" : "#/definitions/Sort"
        },
        "first" : {
          "type" : "boolean",
          "default" : false
        },
        "last" : {
          "type" : "boolean",
          "default" : false
        },
        "numberOfElements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Garage"
          }
        },
        "number" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "Sort" : {
      "type" : "object"
    }
  }
}